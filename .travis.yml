sudo: required
dist: trusty
group: travis_latest

services:
  - docker

language: node_js

os:
  - linux
  - osx

osx_image: xcode8.3

node_js:
  - "10"
  - "12"

env:
  global:
    - CI_BUILD_NUMBER=$TRAVIS_BUILD_NUMBER
    - secure: "j7SoxNxs3KBRvvLrEWeZGmsgHRLMwcCvYnNh/F8GeaCnM0U87s9AqHMmV4NNRyDoac7PpqegCYk21nLN4mx1Mj9rs/wvQBnl1LYuetRm7ib9Zq21+cJSIaO2USourexEuivySEuzWqR5pb7bcdAZYhKVzBOStw1k0h2rD0xrbdr91UclcQniiex5bqQ4UIE+cPZVqS5vOPZck9P9GMBmVNM0mrfzqTUkiLUFtTbg9Msz5GIIZzJsHj49EqmYwoN1B7te3IkF6tEVLKKNIJPqYMcGhKLZ5jF9ugxkPYPP1JvAxRftrFdCvmdclwJK6yE5ByMY9YHkXw1NvMQ9rzuI10NBM0inUZUmPZepWvnOh4k0FSeFKReWGeVVciap/W0seqxn99lDGMDXaauz5CKD9tVXwAOZ8H/dZAnPEUSd9xEvl5NtLbi1djvvz6LkdDSj9iGedoLEwcxkueBu/UUWLbm+ALdn1dcH1e37TLPc5amP5fIh/klP2KZtfgKzFn8lW65RyrB+UgVlhwQMyv5cCMKAttE1JyU/6bNXvfa0qbnk5m5weVoUsp5PBbx9IYCj7pgGaqmqqON5AOm+JBDK1sl1T2uHCU3wfKBqES8krTPjP7wNiwCTKr7RqyAVYf8d006G6cuDcYIg5NR+l5zM4tfE3U8NHyFrdy0Iw9WBcGg=" # DOCKER_EMAIL
    - secure: "jc0Y/6EaYofG3QFfoepLxBFW8+Ai8aGWzfME7/afnq1o13zV99SlABm/3VPfiZUJsNAi3/Ji4IqZ5FlkfNT5Gj0C2GWUbSGoi9WURyhxteQQg0b2Bg6JKtaYPRAN1O+BXVHMR8WWS1Xqi6W8dp2xUeZDf8w0VNC4kzAQqhlBV0DQnQjPEMnYGV8FaMDZIYENMRc+T6xjttUPrQHtK2bLhL3xIdZkCauFgX7OcNSBGhGiTDUgO2jgE5si39MCUoU231G3cQnAeBMTXnhYTMENLbwrU2EHJX1btB8lvfnQ4hzeRmgZ7rVUxJ52h7ECGzOyO0QK44q4VMkzU5AtvZ/I7lRVWVb9l+YGaGWk3+zGU2y69hw145stIEjzqByjJJogH9t6g5wmZ/kcl54RMfZvlBdhyyd83zBEnAeSnfzKz4S2AcuAzGaeuIKUMms42SiU+Ixl7m6x0e/kbk4SJ7eP6+GJPtbFUlaXJOEdqa3lANmOqSV8ntXndskuJG+BFrYlpFoBEvJE4fMwO7QRgp/pSiUMO1JVtQ6JT7qSqJYtwWPxfufUrbLkTTohkcqsYICi11ifRYeiVcmJASIWMmWtvSM1IC8wfIEZF8d3mn7Q/1dihhvVzpBbYmY6K9o8/u0T3YKuo+xLwLW+JEpLVx67+MblTP3aF8yDC/WMjWfURrE=" # DOCKER_USER
    - secure: "HZ5XpBsxlX3ul27m9hyskQ1keT+I/vaxMroREyhXbO+7jgwT8LO9r86+87m2MsUDia4sNF6W/f7VmsOwrJq8K/jbAf8upQERPcyETsib0ElbiVatW1B83rS6T+c5//9NLBXvZcdnUOSEg6PW0B1EDLwpe40ljAZvwpPE362I4Lx9I8DdkcLbzCRIEdH2x7xqpydFsRseieMroWgb6xLlYL5DMOeOpjZ+9L2YSuJaEdGDM2SQmnnrTxKLn1NABo8O5ZeSkOdPvsyT+0x3zHWnS8tvvxdL3awhyR5eRAnhJaqNsNnAUv4uQzvVU+utLJu6KY8BBw//VyKc818ce03gkRzrrBwf8Jk2UE/Ke/9omxP/Iiu4ZGguCmDPeQkA5Gs8D98zWvL0+RvqSmHbatdEsk/74w7HIC0lEV9qF8iG6H3w9ppybNhGxiXVz3jd4k/LsOYakKK7wInEH0p/5sWC6SbWKvnU1VIKedGIJkM/saz2KQuyLuKgZ68tZePET3p0yPxXHsw/bxhaPCZ8jcAWQCh6HbYFBlMUeKnJWlgo7p53MQ88B2rfYiB788SC6gBu4UJl7z7gdtxJPNCypq/jmo6GDhxva0plqgRhYBmNBL2gANsi8qxKSuAyPw7VT36NNoJN48t6SH/Ie0Y2Vja0xRCIzZ1TiOh1dpiLei+EMdA=" # DOCKER_PASS
    - secure: "rl9HXqY59g8hCy+wLWq+lxc70zySZE3pSx4FLcnfKxAn04dh5DgDDAkVev2mRMbjNQFsNMBoxiyxnmKmW5V/IFv1fY74ySZH4UTGd00Qy81W3LgxBp1LZt9TcenrFwXtSJUClXRfb+uJkm41UH9zc9ZGnG19SgGpiUWAA2inzOU64phE3oGJPuxWX0oJ+brDgy78XHWTCqFoG0Fa/zq8si9svFeY+qD8evic1fkKLG1bIJhZ5sXXIVcQ2rs28M+nc5XBWs08N358dOC6vdukVzekk/K+nY7zzPf/gE5qJ1dsLaMn+TqOpGK3EaCDCg1OkpqbNE5wPcTO5S5vvigQq1zPO/iSNTu8lqNPxyQCqupHqQG6LUU6yk25x0Kp0beAWg39nbYaUPEL9rxzLYcIqSkcjc6KQhYKwe2gmXzRxjecnCOzq2toa7Px5bkVaWD8weSIyqlR/5Q8tK8JV1Xu6/SNCeCl1kDCL0gltjIPM4D9wL3GjYB0C8cDA/igxFGriVtZ8mT1sod1voGC+mwNHyCKSbZcxpwkA+i4YRnbvfW0Bs9Xio5UwKZytqmvvkpOE63H0h0zZ75e1W1bAF6m6wkpxaq7h63O5YLjEIhCqvzgJFmmnd8Cc1lW/pRsxOOpTh6tQ9AHKyWOM48KLmW9pEIgxgOoCTux7xPoUwq5At0=" # GITHUB_TOKEN
#    - secure: "zn6ZQM7LFgFcwFNqcbhBGY9DYZzw3tOa3puTntdcEfnMsp+ikcJSYl8lvTj1TL1rvZIAJfO896Uk79HTyJtv06a9LjpEElaQvkBEtPGnE0fdGWLgK1cl0JBxPNEDicAoYrUV2QkuuwaTtpKeUsnD6XmWSzzpqmZKDLfRyO1xwHyvH4aTvqAhDXM7Hb+Hae4Nk7ZCq5v1CwScu6gdaJMBPdcmWBzAPNnAJYbDilw3fFdfOrxhuTagmmBQFn99iaIRbLR4sTuI/c53NMUS8FJyfistTVVuMOFTSdFvlQ/Ikm6PbIYYIMDp9RetGIJk7IL4U18LpwACzhjc25SvWrQXPI7eiW0H3uD8rGPtR50cBrbxRI/Of7271eqXvtNMzHSsCo0ENQ1qYWoF5OhI4roklAfZjQpdi7Ngg+EPNIgf24vpf0fI9u8caOHxzAYjrwdcXCLTmcu0ANuQMMXP5G7mBZG5/kGzC5cpc11uqwINCU10rVQa7JVNuFNhuT98/c+DSeBY92w9nEsCshG1AKcNjY677FbBdVS+DCPPRjiAfjomT9Ma8VqR/bGCogzaEaA7adUbGLGI9V397QF9gSrzyBP/zjOiYVX1mRjylmEitdQtXF3CXsbhrOOCenDifKHhtnOgXgpObcbwV4B82VhGzDOvTxF2n+QTGhUAA/Okyv8=" # CSC_LINK
#    - secure: "LenBHoTcLW6cF7ML3+dB7JICMzEkawrJHiqFcGSo+hgapB0NCHGUiihr2zrjGSlHmElPiQ2TCnCRmPvOzVfpZswg36D0+1niPgZ+0vfGfPEoPmHhlvIsMPLb7v0lCIeh8z2o9eNbSvnv6NRXS4o5NLlHzM+RhAYARSXvRmFxqCCBn1Sj9pB5TB9NX3mK0Lb3mEJcIgEVFBr/xLiISPUBGFmncHUpxYjZHwxXQXRcGyfOEphLM9tvmEdoILRxM67k035csAIeaLKKPJcMGmO0e/JwZacQN7s3MhD2M8NddhQvWklNjabXAJ0L9Ycujf6rI5RsGcZL2U80HKr0aYRMiVW7/MPMpLARFOUoLfuFAXKkkLHp7Lbb1W6Zftr4yxkrfDXIQsh976HkBj+czr6wGwzBwb39zX4KEm/Yc3TEIxC/kKs9bt+vVW6BG+J41neiDiuIY1D1tRA0OEq0j04zpU6n683ojfYddzFoUWCN+TB3i0HQxWsKTOGKdcQwrJs7xZ4//UzD/vOTHj18SH0nm6ImF2/7q+9wJO646gHWTGTjGFYdupuR402wb3h5vWmGfFRvX6B1QtYImmEwMFnqf2XRwTTSz3niKn2Rt1YUiCP5bEz+Dcr+e+A8Jidt6ZuJEXv5SbykTG4YBmgCuuFT5KRwv08kule7FiUtQ2KD5XE=" # CSC_KEY_PASSWORD

cache:
  directories:
    - $HOME/.electron

addons:
  apt:
    packages:
      - icnsutils
      - graphicsmagick
      - gcc-multilib
      - g++-multilib
      - rpm

before_install:
  - git --version
  - git config --global user.name "Travis CI"
  - git config --global user.email "travis@travis-ci.org"
  #
  # https://github.com/electron-userland/electron-builder/wiki/Multi-Platform-Build#os-x
  #
  # Use brew to install required packages.
  #
  # To build app in distributable format for Windows on OS X:
  # $ brew install Caskroom/cask/xquartz wine mono
  #
  # To build app in distributable format for Linux on OS X:
  # $ brew install ruby gnu-tar libicns graphicsmagick
  #
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
    fi
  - npm install -g npm
  - npm --version

install: travis_wait 40 npm install

before_script:
  - COMMIT_LOG=`git log -1 --format='%ci %H %s'`
  - echo "$COMMIT_LOG"

script:
  - |
    if [[ -z "$TRAVIS_TAG" ]]; then
      npm run build-latest
    else
      npm run build
    fi

after_success:
  - PACKAGE_NAME=`node -e "console.log(require('./src/package.json').name)"`
  - PACKAGE_VERSION=`node -e "console.log(require('./src/package.json').version)"`
  - PRODUCT_NAME=Makerverse
  - RELEASE=${PACKAGE_NAME}-${PACKAGE_VERSION}
  - echo "$PACKAGE_NAME"
  - echo "$PACKAGE_VERSION"
  - echo "$PRODUCT_NAME"
  - echo "$RELEASE"
  - npm run coveralls
  - mkdir -p releases
  - |
    # build:mac-x64
    if [[ "$TRAVIS_NODE_VERSION" == "10" && "$TRAVIS_OS_NAME" == "osx" ]]; then
      # https://github.com/electron-userland/electron-builder/issues/398
      security import "scripts/certs/Certum-Code-Signing-CA-SHA2.cer" -k ~/Library/Keychains/login.keychain -T /usr/bin/codesign;
      # https://github.com/electron-userland/electron-osx-sign/issues/83
      # Temporarily Bypass Gatekeeper
      sudo spctl --master-disable;
      sudo spctl --status;
      npm run build:mac-x64;
      ls -al output output/*;
      cp -af "output/${PRODUCT_NAME}-${PACKAGE_VERSION}.dmg" "releases/${RELEASE}-mac-x64.dmg";
      ls -al releases/*;
      if [[ "$TRAVIS_BRANCH" == "master" && -z "$TRAVIS_TAG" && ! -z "$(ls -A releases)" ]]; then
        npm run github-release -- delete \
          --owner=makerverse \
          --repo=makerverse \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          "*-mac-x64.dmg";
        npm run github-release -- upload \
          --owner=makerverse \
          --repo=makerverse \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-mac-x64.dmg";
        rm -f "releases/${RELEASE}-mac-x64.dmg";
      fi
    fi
  - |
    # build:linux-ia32
    if [[ "$TRAVIS_NODE_VERSION" == "10" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      npm run build:linux-ia32;
      ls -al output output/*;
      cp -af "output/${PRODUCT_NAME}-${PACKAGE_VERSION}-i386.AppImage" "releases/${RELEASE}-linux-i386.AppImage";
      cp -af "output/${PACKAGE_NAME}_${PACKAGE_VERSION}_i386.deb" "releases/${RELEASE}-linux-i386.deb";
      cp -af "output/${PACKAGE_NAME}-${PACKAGE_VERSION}.i686.rpm" "releases/${RELEASE}-linux.i686.rpm";
      pushd releases;
      ln -sf ../output/linux-ia32-unpacked "${RELEASE}-linux-ia32";
      tar zcfh "${RELEASE}-linux-ia32.tar.gz" "${RELEASE}-linux-ia32";
      rm -f "${RELEASE}-linux-ia32";
      popd;
      ls -al releases/*;
      if [[ "$TRAVIS_BRANCH" == "master" && -z "$TRAVIS_TAG" && ! -z "$(ls -A releases)" ]]; then
        npm run github-release -- delete \
          --owner=makerverse \
          --repo=makerverse \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          "*-linux-i386.AppImage" \
          "*-linux-i386.deb" \
          "*-linux.i686.rpm" \
          "*-linux-ia32.tar.gz";
        npm run github-release -- upload \
          --owner=makerverse \
          --repo=makerverse \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-linux-i386.AppImage" \
          "releases/${RELEASE}-linux-i386.deb" \
          "releases/${RELEASE}-linux.i686.rpm" \
          "releases/${RELEASE}-linux-ia32.tar.gz";
        rm -f "releases/${RELEASE}-linux-i386.AppImage";
        rm -f "releases/${RELEASE}-linux-i386.deb";
        rm -f "releases/${RELEASE}-linux.i686.rpm";
        rm -f "releases/${RELEASE}-linux-ia32.tar.gz";
      fi
    fi
  - |
    # build:linux-x64
    if [[ "$TRAVIS_NODE_VERSION" == "10" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      npm run build:linux-x64;
      ls -al output output/*;
      cp -af "output/${PRODUCT_NAME}-${PACKAGE_VERSION}.AppImage" "releases/${RELEASE}-linux-x86_64.AppImage";
      cp -af "output/${PACKAGE_NAME}_${PACKAGE_VERSION}_amd64.deb" "releases/${RELEASE}-linux-amd64.deb";
      cp -af "output/${PACKAGE_NAME}-${PACKAGE_VERSION}.x86_64.rpm" "releases/${RELEASE}-linux.x86_64.rpm";
      pushd releases;
      ln -sf ../output/linux-unpacked "${RELEASE}-linux-x64";
      tar zcfh "${RELEASE}-linux-x64.tar.gz" "${RELEASE}-linux-x64";
      rm -f "${RELEASE}-linux-x64";
      popd;
      ls -al releases/*;
      if [[ "$TRAVIS_BRANCH" == "master" && -z "$TRAVIS_TAG" && ! -z "$(ls -A releases)" ]]; then
        npm run github-release -- delete \
          --owner=makerverse \
          --repo=makerverse \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          "*-linux-x86_64.AppImage" \
          "*-linux-amd64.deb" \
          "*-linux.x86_64.rpm" \
          "*-linux-x64.tar.gz";
        npm run github-release -- upload \
          --owner=makerverse \
          --repo=makerverse \
          --tag="${TRAVIS_BRANCH}-latest" \
          --name="${TRAVIS_BRANCH}" \
          --body="${COMMIT_LOG}" \
          "releases/${RELEASE}-linux-x86_64.AppImage" \
          "releases/${RELEASE}-linux-amd64.deb" \
          "releases/${RELEASE}-linux.x86_64.rpm" \
          "releases/${RELEASE}-linux-x64.tar.gz";
        rm -f "releases/${RELEASE}-linux-x86_64.AppImage";
        rm -f "releases/${RELEASE}-linux-amd64.deb";
        rm -f "releases/${RELEASE}-linux.x86_64.rpm";
        rm -f "releases/${RELEASE}-linux-x64.tar.gz";
      fi
    fi
  - |
    # docker image
    if [[ "$TRAVIS_NODE_VERSION" == "10" && "$TRAVIS_OS_NAME" == "linux" ]]; then
      travis_wait 40 scripts/travis-docker-build.sh;
    fi

before_deploy:
  - echo "Deploying to GitHub releases"
deploy:
  provider: releases
  api_key:
secure: "rl9HXqY59g8hCy+wLWq+lxc70zySZE3pSx4FLcnfKxAn04dh5DgDDAkVev2mRMbjNQFsNMBoxiyxnmKmW5V/IFv1fY74ySZH4UTGd00Qy81W3LgxBp1LZt9TcenrFwXtSJUClXRfb+uJkm41UH9zc9ZGnG19SgGpiUWAA2inzOU64phE3oGJPuxWX0oJ+brDgy78XHWTCqFoG0Fa/zq8si9svFeY+qD8evic1fkKLG1bIJhZ5sXXIVcQ2rs28M+nc5XBWs08N358dOC6vdukVzekk/K+nY7zzPf/gE5qJ1dsLaMn+TqOpGK3EaCDCg1OkpqbNE5wPcTO5S5vvigQq1zPO/iSNTu8lqNPxyQCqupHqQG6LUU6yk25x0Kp0beAWg39nbYaUPEL9rxzLYcIqSkcjc6KQhYKwe2gmXzRxjecnCOzq2toa7Px5bkVaWD8weSIyqlR/5Q8tK8JV1Xu6/SNCeCl1kDCL0gltjIPM4D9wL3GjYB0C8cDA/igxFGriVtZ8mT1sod1voGC+mwNHyCKSbZcxpwkA+i4YRnbvfW0Bs9Xio5UwKZytqmvvkpOE63H0h0zZ75e1W1bAF6m6wkpxaq7h63O5YLjEIhCqvzgJFmmnd8Cc1lW/pRsxOOpTh6tQ9AHKyWOM48KLmW9pEIgxgOoCTux7xPoUwq5At0="
file_glob: true
  file:
    - "releases/*.*"
  overwrite: true
  skip_cleanup: true
  on:
    # https://docs.travis-ci.com/user/deployment#Conditional-Releases-with-on
    tags: true  # Deploy app only when a tag is applied to the commit
    node: "10"
